name: CI/CD using github actions & docker

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: code checkout
        uses: actions/checkout@v4

      - name: Setup Gradle
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: make application.yml file
        run: |
          cd backend
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch ./application.yml
          touch ./application-prod.yml
          echo "${{ secrets.APPLICATION_YML }}" | base64 -d > ./application.yml
          echo "${{ secrets.APPLICATION_PROD_YML }}" | base64 -d > ./application-prod.yml


      - name: make application-test.yml file
        run: |
          cd backend
          mkdir -p ./src/test/resources
          cd ./src/test/resources
          touch ./application-test.yml
          echo "${{ secrets.APPLICATION_TEST_YML }}" | base64 -d > ./application-test.yml

        # 테스트 코드를 실행하지 않도록 설정
      - name: Build with Gradle Wrapper
        run: |
          cd backend
          ./gradlew clean build -x test

      # Docker build & Push
      - name: Docker build
        run: |
          cd backend
          docker build --platform=linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/trendnow:v1 .

      - name: DockerHub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/trendnow:v1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # EC2 배포
      - name: Docker image pull & Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }} # EC2 인스턴스 퍼블릭 DNS
          username: ec2-user
          key: ${{ secrets.EC2_PRIVATE_KEY }} # pem 키
          # 도커 작업
          script: |
            sudo docker stop trendnow || true
            sudo docker rm trendnow || true
            sudo docker image prune -a -f
            echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/trendnow:v1
            sudo docker run -d -p 8080:8080 \
            --name trendnow \
            --memory="950m" \
            --memory-swap="950m" \
            --cpus="1.0" \
            -e JAVA_OPTS="-Xms450m -Xmx450m -XX:+UseContainerSupport -XX:MaxMetaspaceSize=256m -XX:MaxDirectMemorySize=64m -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+DisableExplicitGC -Djava.security.egd=file:/dev/./urandom" \
            --log-driver=awslogs \
            --log-opt awslogs-region=ap-northeast-2 \
            --log-opt awslogs-group="Trendnow-Logs" \
            --log-opt awslogs-stream="{instance_id}" \
            ${{ secrets.DOCKER_USERNAME }}/trendnow:v1
